window.vizorECharts={charts:new Map,dataSources:new Map,logging:!1,changeLogging:function(e){vizorECharts.logging=e},getChart:function(e){return vizorECharts.charts.get(e)},getDataSource:function(e){var t=vizorECharts.dataSources.get(e);return vizorECharts.logging&&(console.log(`GET CACHED FETCH ${e}`),console.log(t)),t},evaluatePath:function(e,t){const r=t.split(".");let a=e;for(const e of r){if(!a.hasOwnProperty(e))return;a=a[e]}return a},fetchExternalData:async function(e,t){if(null!=t)for(item of(e.__dataSources=[],JSON.parse(t))){vizorECharts.logging&&(console.log(`FETCH ${item.id}`),console.log(item));const t=await fetch(item.url,item.options);if(!t.ok)throw new Error("Failed to fetch external chart data: url="+url);var r=null;if("json"==item.fetchAs){if(r=await t.json(),null!=item.path)try{r=vizorECharts.evaluatePath(r,item.path)}catch(e){console.log("Failed to evaluate path expression of external data source"),console.log(e)}}else"string"==item.fetchAs&&(r=await t.text());if(vizorECharts.logging&&console.log(r),null!=item.afterLoad)try{r=new Function("return ("+item.afterLoad+")")()(r)}catch(e){console.log("Failed to execute afterLoad function of external data source"),console.log(e)}window.vizorECharts.dataSources.set(item.id,r),e.__dataSources.push(item.id)}},registerMaps:function(e,t){if(null!=t){var r;try{r=JSON.parse(t)}catch(e){r=new Function("return ("+t+")")()}for(item of r){vizorECharts.logging&&(console.log("MAP"),console.log(item));var a=item.mapName||item.name;if("geoJSON"===item.type)echarts.registerMap(a,{geoJSON:item.geoJSON,specialAreas:item.specialAreas});else if("svg"===item.type){if(!item.svg){console.error("SVG content is missing for map:",a);continue}echarts.registerMap(a,{svg:item.svg})}}}},initChart:async function(e,t,r,a,o,i){var n=echarts.init(document.getElementById(e),t,JSON.parse(r));if(window.addEventListener("resize",function(){n.resize()}),vizorECharts.charts.set(e,n),n.showLoading(),null!=a){var s;await vizorECharts.fetchExternalData(n,i),await vizorECharts.registerMaps(n,o);try{s=JSON.parse(a)}catch(e){s=new Function("return ("+a+")")()}vizorECharts.logging&&(console.log("CHART"),console.log(s)),n.setOption(s),n.hideLoading()}},updateChart:async function(e,t,r,a){var o=vizorECharts.charts.get(e);if(null!=o){var i;await vizorECharts.fetchExternalData(o,a),await vizorECharts.registerMaps(o,r);try{i=JSON.parse(t)}catch(e){i=new Function("return ("+t+")")()}o.setOption(i),o.hideLoading()}else console.error("Failed to retrieve chart "+e)},attachClickEvent:function(e,t){var r=vizorECharts.charts.get(e);null!=r?r.on("click",function(e){vizorECharts.logging&&(console.log("CLICK"),console.log(e)),delete e.encode,delete e.event,t.invokeMethodAsync("HandleChartClick",e)}):console.error("Failed to retrieve chart "+e)},clearChart:function(e){var t=vizorECharts.charts.get(e);null!=t?t.clear():console.error("Failed to clear chart "+e)},resizeChart:function(e){var t=vizorECharts.charts.get(e);null!=t?t.resize():console.error("Failed to resize chart "+e)},disposeChart:function(e){var t=vizorECharts.charts.get(e);null!=t?(t.__dataSources&&Array.isArray(t.__dataSources)&&t.__dataSources.forEach(e=>{window.vizorECharts.dataSources.delete(e)}),echarts.dispose(t),vizorECharts.charts.delete(e)):console.error("Failed to dispose chart "+e)}};